// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f /tmp/kue/cluster-api/config/crd/bases/ipam.cluster.x-k8s.io_ipaddresses.yaml

package v1alpha1

import "strings"

// IPAddress is the Schema for the ipaddress API.
#IPAddress: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "ipam.cluster.x-k8s.io/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "IPAddress"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// spec is the desired state of IPAddress.
	spec!: #IPAddressSpec
}

// spec is the desired state of IPAddress.
#IPAddressSpec: {
	// address is the IP address.
	address!: strings.MaxRunes(39) & strings.MinRunes(1)
	claimRef!: {
		// Name of the referent.
		// This field is effectively required, but due to backwards
		// compatibility is
		// allowed to be empty. Instances of this type with an empty value
		// here are
		// almost certainly wrong.
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
		name?: string
	}

	// gateway is the network gateway of the network the address is
	// from.
	gateway?: strings.MaxRunes(39) & strings.MinRunes(1)

	// poolRef is a reference to the pool that this IPAddress was
	// created from.
	poolRef!: {
		// APIGroup is the group for the resource being referenced.
		// If APIGroup is not specified, the specified Kind must be in the
		// core API group.
		// For any other third-party types, APIGroup is required.
		apiGroup?: string

		// Kind is the type of resource being referenced
		kind!: string

		// Name is the name of resource being referenced
		name!: string
	}

	// prefix is the prefix of the address.
	prefix!: int
}
