// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f /tmp/kue/cluster-api/config/crd/bases/ipam.cluster.x-k8s.io_ipaddressclaims.yaml

package v1beta2

import "strings"

// IPAddressClaim is the Schema for the ipaddressclaim API.
#IPAddressClaim: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "ipam.cluster.x-k8s.io/v1beta2"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "IPAddressClaim"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// spec is the desired state of IPAddressClaim.
	spec!: #IPAddressClaimSpec
}

// spec is the desired state of IPAddressClaim.
#IPAddressClaimSpec: {
	// clusterName is the name of the Cluster this object belongs to.
	clusterName?: strings.MaxRunes(63) & strings.MinRunes(1)

	// poolRef is a reference to the pool from which an IP address
	// should be created.
	poolRef!: {
		// apiGroup of the IPPool.
		// apiGroup must be fully qualified domain name.
		apiGroup!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			=~"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
		}

		// kind of the IPPool.
		// kind must consist of alphanumeric characters or '-', start with
		// an alphabetic character, and end with an alphanumeric
		// character.
		kind!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			=~"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
		}

		// name of the IPPool.
		// name must consist of lower case alphanumeric characters, '-' or
		// '.', and must start and end with an alphanumeric character.
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			=~"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
		}
	}
}
