// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f /tmp/kue/cluster-api-provider-aws/config/crd/bases/infrastructure.cluster.x-k8s.io_rosamachinepools.yaml

package v1beta2

import "strings"

// ROSAMachinePool is the Schema for the rosamachinepools API.
#ROSAMachinePool: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "infrastructure.cluster.x-k8s.io/v1beta2"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "ROSAMachinePool"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// RosaMachinePoolSpec defines the desired state of
	// RosaMachinePool.
	spec!: #ROSAMachinePoolSpec
}

// RosaMachinePoolSpec defines the desired state of
// RosaMachinePool.
#ROSAMachinePoolSpec: {
	// AdditionalSecurityGroups is an optional set of security groups
	// to associate
	// with all node instances of the machine pool.
	additionalSecurityGroups?: [...string]

	// AdditionalTags are user-defined tags to be added on the
	// underlying EC2 instances associated with this machine pool.
	additionalTags?: {
		[string]: string
	}

	// AutoRepair specifies whether health checks should be enabled
	// for machines
	// in the NodePool. The default is true.
	autoRepair?: bool

	// Autoscaling specifies auto scaling behaviour for this
	// MachinePool.
	// required if Replicas is not configured
	autoscaling?: {
		maxReplicas?: int & >=1
		minReplicas?: int & >=1
	}

	// AvailabilityZone is an optinal field specifying the
	// availability zone where instances of this machine pool should
	// run
	// For Multi-AZ clusters, you can create a machine pool in a
	// Single-AZ of your choice.
	availabilityZone?: string

	// InstanceType specifies the AWS instance type
	instanceType!: string

	// Labels specifies labels for the Kubernetes node objects
	labels?: {
		[string]: string
	}

	// NodeDrainGracePeriod is grace period for how long Pod
	// Disruption Budget-protected workloads will be
	// respected during upgrades. After this grace period, any
	// workloads protected by Pod Disruption
	// Budgets that have not been successfully drained from a node
	// will be forcibly evicted.
	//
	// Valid values are from 0 to 1 week(10080m|168h) .
	// 0 or empty value means that the MachinePool can be drained
	// without any time limitation.
	nodeDrainGracePeriod?: string

	// NodePoolName specifies the name of the nodepool in Rosa
	// must be a valid DNS-1035 label, so it must consist of lower
	// case alphanumeric and have a max length of 15 characters.
	nodePoolName!: strings.MaxRunes(15) & {
		=~"^[a-z]([-a-z0-9]*[a-z0-9])?$"
	}

	// ProviderIDList contain a ProviderID for each machine instance
	// that's currently managed by this machine pool.
	providerIDList?: [...string]
	subnet?: string

	// Taints specifies the taints to apply to the nodes of the
	// machine pool
	taints?: [...{
		// The effect of the taint on pods that do not tolerate the taint.
		// Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
		effect!: "NoSchedule" | "PreferNoSchedule" | "NoExecute"

		// The taint key to be applied to a node.
		key!: string

		// The taint value corresponding to the taint key.
		value?: =~"^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
	}]

	// TuningConfigs specifies the names of the tuning configs to be
	// applied to this MachinePool.
	// Tuning configs must already exist.
	tuningConfigs?: [...string]
	updateConfig?: {
		// RollingUpdate specifies MaxUnavailable & MaxSurge number of
		// nodes during update.
		rollingUpdate?: {
			// MaxSurge is the maximum number of nodes that can be provisioned
			// above the desired number of nodes.
			// Value can be an absolute number (ex: 5) or a percentage of
			// desired nodes (ex: 10%).
			// Absolute number is calculated from percentage by rounding up.
			//
			// MaxSurge can not be 0 if MaxUnavailable is 0, default is 1.
			// Both MaxSurge & MaxUnavailable must use the same units
			// (absolute value or percentage).
			//
			// Example: when MaxSurge is set to 30%, new nodes can be
			// provisioned immediately
			// when the rolling update starts, such that the total number of
			// old and new
			// nodes do not exceed 130% of desired nodes. Once old nodes have
			// been
			// deleted, new nodes can be provisioned, ensuring that total
			// number of nodes
			// running at any time during the update is at most 130% of
			// desired nodes.
			maxSurge?: matchN(>=1, [int, string]) & (number | =~"^((100|[0-9]{1,2})%|[0-9]+)$")

			// MaxUnavailable is the maximum number of nodes that can be
			// unavailable during the update.
			// Value can be an absolute number (ex: 5) or a percentage of
			// desired nodes (ex: 10%).
			// Absolute number is calculated from percentage by rounding down.
			//
			// MaxUnavailable can not be 0 if MaxSurge is 0, default is 0.
			// Both MaxUnavailable & MaxSurge must use the same units
			// (absolute value or percentage).
			//
			// Example: when MaxUnavailable is set to 30%, old nodes can be
			// deleted down to 70% of
			// desired nodes immediately when the rolling update starts. Once
			// new nodes
			// are ready, more old nodes be deleted, followed by provisioning
			// new nodes,
			// ensuring that the total number of nodes available at all times
			// during the
			// update is at least 70% of desired nodes.
			maxUnavailable?: matchN(>=1, [int, string]) & (number | =~"^((100|[0-9]{1,2})%|[0-9]+)$")
		}
	}

	// Version specifies the OpenShift version of the nodes associated
	// with this machinepool.
	// ROSAControlPlane version is used if not set.
	version?: string

	// VolumeSize set the disk volume size for the machine pool, in
	// Gib. The default is 300 GiB.
	volumeSize?: uint & >=75 & <=16384
}
