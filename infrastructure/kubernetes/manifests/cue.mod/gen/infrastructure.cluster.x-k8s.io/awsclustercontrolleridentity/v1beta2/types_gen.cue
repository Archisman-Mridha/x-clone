// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f /tmp/kue/cluster-api-provider-aws/config/crd/bases/infrastructure.cluster.x-k8s.io_awsclustercontrolleridentities.yaml

package v1beta2

import "strings"

// AWSClusterControllerIdentity is the Schema for the
// awsclustercontrolleridentities API
// It is used to grant access to use Cluster API Provider AWS
// Controller credentials.
#AWSClusterControllerIdentity: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "infrastructure.cluster.x-k8s.io/v1beta2"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "AWSClusterControllerIdentity"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace?: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec for this AWSClusterControllerIdentity.
	spec!: #AWSClusterControllerIdentitySpec
}
#AWSClusterControllerIdentitySpec: {
	// AllowedNamespaces is used to identify which namespaces are
	// allowed to use the identity from.
	// Namespaces can be selected either using an array of namespaces
	// or with label selector.
	// An empty allowedNamespaces object indicates that AWSClusters
	// can use this identity from any namespace.
	// If this object is nil, no namespaces will be allowed (default
	// behaviour, if this field is not provided)
	// A namespace should be either in the NamespaceList or match with
	// Selector to use the identity.
	allowedNamespaces?: null | {
		// An nil or empty list indicates that AWSClusters cannot use the
		// identity from any namespace.
		list?: null | [...string]

		// An empty selector indicates that AWSClusters cannot use this
		// AWSClusterIdentity from any namespace.
		selector?: {
			// matchExpressions is a list of label selector requirements. The
			// requirements are ANDed.
			matchExpressions?: [...{
				// key is the label key that the selector applies to.
				key!: string

				// operator represents a key's relationship to a set of values.
				// Valid operators are In, NotIn, Exists and DoesNotExist.
				operator!: string

				// values is an array of string values. If the operator is In or
				// NotIn,
				// the values array must be non-empty. If the operator is Exists
				// or DoesNotExist,
				// the values array must be empty. This array is replaced during a
				// strategic
				// merge patch.
				values?: [...string]
			}]

			// matchLabels is a map of {key,value} pairs. A single {key,value}
			// in the matchLabels
			// map is equivalent to an element of matchExpressions, whose key
			// field is "key", the
			// operator is "In", and the values array contains only "value".
			// The requirements are ANDed.
			matchLabels?: {
				[string]: string
			}
		}
	}
}
